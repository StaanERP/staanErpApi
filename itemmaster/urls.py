from django.views.decorators.csrf import csrf_exempt
from rest_framework.routers import DefaultRouter
from django.urls import path, include

from django.conf import settings
from django.conf.urls.static import static

from  itemmaster.views import *
from .schema import schema
from graphene_django.views import GraphQLView

urlpatterns = [
    path("graphql", csrf_exempt(GraphQLView.as_view(graphiql = True, schema=schema))),
    path('Itemmsterhistor/<int:pk>',  getItemMasterHistory.as_view()),
    path('hsn',  HsnCreateView.as_view()),
    path('hsn/<int:pk>',  HsnDetails.as_view()),
    path('itemGroup',  ItemGroupCreateView.as_view()),
    path('itemGroup/<int:pk>',  ItemGroupDetails.as_view()),
    path('UOM',  UOMCreateView.as_view()),
    path('UOM/<int:pk>', UOMDetails.as_view()),
    path('Category', CategoryCreateView.as_view()),
    path('AccountsGroup', AccountsGroupCreateView.as_view()),
    path('AccountsGroup/<int:pk>', AccountsGroupDetails.as_view()),
    path('AccountsMaster',  AccountsMasterCreateView.as_view()),
    path('AccountsMaster/<int:pk>', AccountsMasterDetails.as_view()),
    path('ItemMaster', ItemMasterCreateView.as_view()),
    path('ItemMaster/<int:pk>', ItemMasterDetails.as_view()),
    path('Alternate', AlternateUnitCreateView.as_view()),
    path('Alternate/<int:pk>', AlternateUnitDetails.as_view()),
    path('Store', StoreCreateView.as_view()),
    path('Store/<int:pk>', StoreDetails.as_view()),
    path('serialNumber', SerialNumbersCreateView.as_view()),
    path('serialNumber/<int:pk>', SerialNumbersDetails.as_view()),
    path('Stock', ItemStockCreateView.as_view()),
    path('Stock/<int:pk>', StockDetails.as_view()),
    path('BatchNumber', BatchNumberCreateView.as_view()),
    path('BatchNumber/<int:pk>', BatchNumberDetails.as_view()),
    path('StockHistoryLog', StockHistoryLogCreateView.as_view()),
    path('StockSerialHistory', StockSerialHistoryCreateView.as_view()),
    path('StockSerialHistory/<int:pk>', StockSerialHistoryDetails.as_view()),
    path('InventoryApprovals', ItemInventoryApprovalCreateView.as_view()),
    path('EditListViews', EditListViews.as_view()),
    path('EditListViews/<int:pk>', EditListViewDetails.as_view()),
    path('displaygroup', displayGroupCreateView.as_view()),
    path('displaygroup/<int:pk>', displayGroupDetails.as_view()),
    path('ItemCombo', ItemComboCreateView.as_view()),
    path('ItemCombo/<int:pk>', ItemComboDetails.as_view()),
    path('CustomerGroup', CustomerGroupCreateView.as_view()),
    path('CustomerGroup/<int:pk>', CustomerGroupDetails.as_view()),
    path('SupplierGroup', SupplierGroupCreateView.as_view()),
    path('SupplierGroup/<int:pk>', SupplierGroupDetails.as_view()),
    path('Contact', ItemContactCreateView.as_view()),
    path('Contact/<int:pk>', ItemContactDetails.as_view()),
    path('caddress', ItemAddressCreateView.as_view()),
    path('caddress/<int:pk>', ItemAddressDetails.as_view()),
    path('Supplierform', ItemSupplierFormCreateView.as_view()),
    path('Supplierform/<int:pk>', ItemSupplierFormDetails.as_view()),
    path('CurrencyMaster', CurrencyMasterCreateView.as_view()),
    path('CurrencyMaster/<int:pk>', CurrencyMasterDetails.as_view()),
    path('CurrencyExchange', CurrencyExchangeCreateView.as_view()),
    path('CurrencyExchange/<int:pk>', CurrencyExchangeDetails.as_view()),
    path('SalesOrderItem', SalesOrderItemCreateView.as_view()),
    path('SalesOrderItem/<int:pk>', SalesOrderItemDetails.as_view()),
    path('payment_mode', PaymentModeCreateView.as_view()),
    path('payment_mode/<int:pk>', PaymentModeDetails.as_view()),
    path('SalesOrder', SalesOrderCreateView.as_view()),
    path('SalesOrder/<int:pk>', SalesOrderDetails.as_view()),
    path('InventoryHandler', InventoryHandlerCreateView.as_view()),
    path('InventoryHandler/<int:pk>', InventoryHandlerDetails.as_view()),
    path('NumberingSeries', NumberingSeriesCreateView.as_view()),
    path('NumberingSeries/<int:pk>', NumberingSeriesDetails.as_view()),
    path('finished_goods', FinishedGoodsCreateView.as_view()),
    path('finished_goods/<int:pk>', FinishedGoodsDetails.as_view()),
    path('raw_material', RawMaterialCreateView.as_view()),
    path('raw_material/<int:pk>', RawMaterialDetails.as_view()),
    path('scrap', ScrapCreateView.as_view()),
    path('scrap/<int:pk>', ScrapDetails.as_view()),
    path('routing', RoutingCreateView.as_view()),
    path('bom', BomCreateView.as_view()),
    path('bom/<int:pk>', BomDetails.as_view()),
    path('StockHistory', getStockHistory),
    path('stock-statement', stock_statement_store_group_filter),
    path('item-combo-get-filter', get_item_combo_),
    path('pos-report-details', get_report_details)
]